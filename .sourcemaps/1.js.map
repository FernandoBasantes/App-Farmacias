{"version":3,"sources":["../../src/pages/pharmaciesList/pharmaciesList.module.ts","../../node_modules/@ionic-native/launch-navigator/index.js","../../src/pages/pharmaciesList/pharmaciesList.service.ts","../../src/pages/pharmaciesList/pharmaciesList.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AACU;AACA;AAWhE,IAAa,wBAAwB;IAArC;IAAuC,CAAC;IAAD,+BAAC;AAAD,CAAC;AAA3B,wBAAwB;IATpC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2EAAkB;SACnB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,2EAAkB,CAAC;SAC7C;QACD,SAAS,EAAC,CAAC,sFAAqB,EAAC,uFAAe,CAAC;KAClD,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;ACfrC;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA,mBAAmB,OAAO;AAC1B,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,2BAA2B;AAC3B,uBAAuB;AACvB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,qCAAqC;AACrC;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAA0C;AACzD;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { PharmaciesListPage } from './pharmaciesList';\r\nimport { PharmaciesListService } from './pharmaciesList.service'\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PharmaciesListPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(PharmaciesListPage),\r\n  ],\r\n  providers:[PharmaciesListService,LaunchNavigator]\r\n})\r\nexport class PharmaciesListPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pharmaciesList/pharmaciesList.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Launch Navigator\n * @description\n * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n *\n * @usage\n * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n *\n * ```typescript\n * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n *\n * constructor(private launchNavigator: LaunchNavigator) { }\n *\n * ...\n *\n * let options: LaunchNavigatorOptions = {\n *   start: 'London, ON',\n *   app: LaunchNavigator.APPS.UBER\n * };\n *\n * this.launchNavigator.navigate('Toronto, ON', options)\n *   .then(\n *     success => console.log('Launched navigator'),\n *     error => console.log('Error launching navigator', error)\n *   );\n * ```\n * @interfaces\n * LaunchNavigatorOptions\n * PromptsOptions\n * RememberChoiceOptions\n * AppSelectionOptions\n * UserChoice\n * UserPrompted\n * AppSelection\n */\nvar LaunchNavigator = (function (_super) {\n    __extends(LaunchNavigator, _super);\n    function LaunchNavigator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.APP = {\n            USER_SELECT: 'user_select',\n            APPLE_MAPS: 'apple_maps',\n            GOOGLE_MAPS: 'google_maps',\n            WAZE: 'waze',\n            CITYMAPPER: 'citymapper',\n            NAVIGON: 'navigon',\n            TRANSIT_APP: 'transit_app',\n            YANDEX: 'yandex',\n            UBER: 'uber',\n            TOMTOM: 'tomtom',\n            BING_MAPS: 'bing_maps',\n            SYGIC: 'sygic',\n            HERE_MAPS: 'here_maps',\n            MOOVIT: 'moovit'\n        };\n        _this.TRANSPORT_MODE = {\n            DRIVING: 'driving',\n            WALKING: 'walking',\n            BICYCLING: 'bicycling',\n            TRANSIT: 'transit'\n        };\n        return _this;\n    }\n    /**\n     * Launches navigator app\n     * @param destination {string|number[]} Location name or coordinates (as string or array)\n     * @param options {LaunchNavigatorOptions}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.navigate = /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    function (destination, options) { return; };\n    /**\n     * Determines if the given app is installed and available on the current device.\n     * @param app {string}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.isAppAvailable = /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    function (app) { return; };\n    /**\n     * Returns a list indicating which apps are installed and available on the current device.\n     * @returns {Promise<string[]>}\n     */\n    /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    LaunchNavigator.prototype.availableApps = /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    function () { return; };\n    /**\n     * Returns the display name of the specified app.\n     * @param app {string}\n     * @returns {string}\n     */\n    /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    LaunchNavigator.prototype.getAppDisplayName = /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    function (app) { return; };\n    /**\n     * Returns list of supported apps on a given platform.\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getAppsForPlatform = /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of transport mode.\n     * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsTransportMode = /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Returns the list of transport modes supported by an app on a given platform.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getTransportModes = /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsDestName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of start location.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStart = /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStartName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of launch mode.\n     * Note that currently only Google Maps on Android does.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsLaunchMode = /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param destination {string | number[]}\n     * @param options {LaunchNavigatorOptions}\n     */\n    /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    LaunchNavigator.prototype.userSelect = /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    function (destination, options) { };\n    LaunchNavigator.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"navigate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"isAppAvailable\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"availableApps\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", String)\n    ], LaunchNavigator.prototype, \"getAppDisplayName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getAppsForPlatform\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsTransportMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getTransportModes\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsDestName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStart\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStartName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsLaunchMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LaunchNavigator.prototype, \"userSelect\", null);\n    /**\n     * @name Launch Navigator\n     * @description\n     * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n     *\n     * @usage\n     * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n     *\n     * ```typescript\n     * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n     *\n     * constructor(private launchNavigator: LaunchNavigator) { }\n     *\n     * ...\n     *\n     * let options: LaunchNavigatorOptions = {\n     *   start: 'London, ON',\n     *   app: LaunchNavigator.APPS.UBER\n     * };\n     *\n     * this.launchNavigator.navigate('Toronto, ON', options)\n     *   .then(\n     *     success => console.log('Launched navigator'),\n     *     error => console.log('Error launching navigator', error)\n     *   );\n     * ```\n     * @interfaces\n     * LaunchNavigatorOptions\n     * PromptsOptions\n     * RememberChoiceOptions\n     * AppSelectionOptions\n     * UserChoice\n     * UserPrompted\n     * AppSelection\n     */\n    LaunchNavigator = __decorate([\n        Plugin({\n            pluginName: 'LaunchNavigator',\n            plugin: 'uk.co.workingedge.phonegap.plugin.launchnavigator',\n            pluginRef: 'launchnavigator',\n            repo: 'https://github.com/dpa99c/phonegap-launch-navigator',\n            platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n        })\n    ], LaunchNavigator);\n    return LaunchNavigator;\n}(IonicNativePlugin));\nexport { LaunchNavigator };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/launch-navigator/index.js\n// module id = 458\n// module chunks = 0 1","import { Injectable } from '@angular/core';\r\n//import {Observable} from 'rxjs/Observable';\r\nimport { Api } from '../../providers/providers';\r\nimport { Pharmacy } from '../../models/pharmacy';\r\nimport {Headers} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class PharmaciesListService {\r\n\r\n        constructor(private api:Api) {\r\n         \r\n    }\r\n    \r\n    public getAllOpenNearlyPharmacies(params) {\r\n        return new Promise((resolve, reject)=>{\r\n\r\n            var obs = this.api.get(`GetAll/${params}`).subscribe((data: any) => {\r\n                obs.unsubscribe();\r\n                if(data.ERROR != undefined){\r\n                    reject(data.ERROR)\r\n                }else{\r\n                    resolve(data);\r\n                }\r\n            },(error) => {\r\n                obs.unsubscribe();\r\n                reject(error);\r\n            });\r\n            \r\n        });\r\n    }\r\n\r\n    public getAllTurnNearlyPharmacies(params) {\r\n        return new Promise((resolve, reject)=>{\r\n\r\n            var obs = this.api.get(`GetAllTurno/${params}`).subscribe((data: any) => {\r\n                obs.unsubscribe();\r\n                if(data.ERROR != undefined){\r\n                    reject(data.ERROR)\r\n                }else{\r\n                    resolve(data);\r\n                }\r\n            },(error) => {\r\n                obs.unsubscribe();\r\n                reject(error);\r\n            });\r\n            \r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pharmaciesList/pharmaciesList.service.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport {\r\n    GoogleMaps,\r\n    GoogleMap,\r\n    LatLng\r\n} from '@ionic-native/google-maps';\r\n\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\r\nimport { PharmaciesListService } from './pharmaciesList.service';\r\nimport { Pharmacy } from '../../models/pharmacy';\r\nimport { Notifications } from '../../providers/providers'\r\n\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-pharmacies-list',\r\n    templateUrl: 'pharmaciesList.html',\r\n})\r\nexport class PharmaciesListPage {\r\n    lat: any;\r\n    lng: any;\r\n    map: GoogleMap;\r\n    State:string;\r\n    Zoom:number = 0;\r\n    CurrentLatLng:LatLng = new LatLng(-1.664823,-78.647734);\r\n    pharmacies:Array<Pharmacy>;\r\n\r\n    constructor(private launchNavigator: LaunchNavigator, private notifications:Notifications, private androidPermissions: AndroidPermissions, private pharmaciesListService:PharmaciesListService, private googleMaps: GoogleMaps, private geolocation: Geolocation, public navCtrl: NavController, public navParams: NavParams) {\r\n        this.State = (this.navParams.get(\"State\") == null || this.navParams.get(\"State\") == undefined)?\"Opened\":this.navParams.get(\"State\");\r\n        this.Zoom = (this.navParams.get(\"Zoom\") == null || this.navParams.get(\"Zoom\") == undefined)?1:this.navParams.get(\"Zoom\");\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        console.log('ionViewDidLoad pharmacies list');\r\n        this.getPosition();\r\n    }\r\n    loadPharmacies(){\r\n        var now = new Date();\r\n        var method = (this.State == \"Opened\")?\"getAllOpenNearlyPharmacies\":(this.State == \"Turn\")?\"getAllTurnNearlyPharmacies\":\"\"\r\n        this.notifications.ShowLoading(\"Cargando Farmacias ...\");\r\n        this.pharmaciesListService[method](`${this.CurrentLatLng.lat.toString()}/${this.CurrentLatLng.lng.toString()}/${this.Zoom}${(this.State == \"Opened\")?`/${now.getHours()}:${now.getMinutes()}`:\"\"}`).then((data:Array<Pharmacy>)=>{\r\n            this.pharmacies = new Array<Pharmacy>();\r\n            data.forEach(pharmacy => {\r\n                this.pharmacies.push(pharmacy);\r\n            })\r\n            this.notifications.HideLoading();\r\n        },(error)=>{\r\n            this.notifications.HideLoading();\r\n            this.notifications.ShowAlert(\"Farmacias\",error,null);\r\n        });\r\n\r\n    }\r\n\r\n    getPosition(): Promise<boolean> {\r\n        console.log(\"Get Position\");\r\n        return new Promise((resolve, reject) => {\r\n            this.geolocation.getCurrentPosition().then((resp) => {\r\n                // resp.coords.latitude\r\n                // resp.coords.longitude\r\n                console.log(\"Get Position success: \", resp);\r\n                var position = new LatLng(resp.coords.latitude, resp.coords.longitude);\r\n                this.CurrentLatLng = position\r\n                this.loadPharmacies();\r\n                resolve();\r\n            }).catch((error) => {\r\n                console.log('Error getting location', error);\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n\r\n    goNavigator(lat, lng){\r\n        this.launchNavigator.navigate(`${lat}, ${lng}`,{\r\n            start:`${this.CurrentLatLng.lat.toString()}, ${this.CurrentLatLng.lng.toString()}`\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pharmaciesList/pharmaciesList.ts"],"sourceRoot":""}